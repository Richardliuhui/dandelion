# 数据库访问配置
# 主数据源，默认的
spring:
  datasource:
    druid:
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://mysqldb:3306/superv?useUnicode=true&useSSL=false&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
      username: root
      password: stpass
      initial-size: 5    # 初始化大小，最小，最大
      min-idle: 5
      max-active: 20
      max-wait: 60000 # 配置获取连接等待超时的时间
      time-between-connect-error-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000 # 配置一个连接在池中最小生存的时间，单位是毫秒
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true # 打开PSCache，并且指定每个连接上PSCache的大小
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall,slf4j # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
  redis:
      open: true  # 是否开启redis缓存  true开启   false关闭
      database: 0
      host: redisdb
      port: 6379
      password:       # 密码
      timeout: 6000ms  # 连接超时时长（毫秒）
      jedis:
        pool:
          max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
          max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-idle: 10      # 连接池中的最大空闲连接
          min-idle: 5       # 连接池中的最小空闲连接
  dubbo:
    profile: classpath:dubbo/dubbo_base_prod.xml # dubbo针对不同环境的配置

security:
  oauth2:
    sso:
      login-path: /login
    client:
      client-id: hos
      client-secret: hos
      access-token-uri: http://172.22.0.5:8080/cn.icepear.dandelion.auth/oauth/token
      user-authorization-uri: http://172.22.0.5:8080/cn.icepear.dandelion.auth/oauth/authorize
    resource:
      token-info-uri: http://172.22.0.5:8080/cn.icepear.dandelion.auth/oauth/check_token
      prefer-token-info: true