<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.icepear.dandelion.upm.biz.mapper.SysMenuMapper">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="cn.icepear.dandelion.upm.api.domain.entity.SysMenu">
		<id column="menu_id" property="id"/>
		<result column="menu_name" property="menuName"/>
		<result column="permission" property="permission"/>
		<result column="path" property="path"/>
		<result column="parent_id" property="parentId"/>
		<result column="icon" property="icon"/>
		<result column="component" property="component"/>
		<result column="sort_order" property="sortOrder"/>
		<result column="menu_type" property="menuType"/>
		<result column="keep_alive" property="keepAlive"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="del_flag" property="delFlag"/>
	</resultMap>

	<resultMap id="MenuVoResultMap" type="cn.icepear.dandelion.upm.api.domain.vo.MenuVO">
		<id column="menu_id" property="menuId"/>
		<result column="name" property="name"/>
		<result column="permission" property="permission"/>
		<result column="parent_id" property="parentId"/>
		<result column="icon" property="icon"/>
		<result column="path" property="path"/>
		<result column="component" property="component"/>
		<result column="sort" property="sort"/>
		<result column="keep_alive" property="keepAlive"/>
		<result column="type" property="type"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="del_flag" property="delFlag"/>
	</resultMap>

	<resultMap id="SystemToMenuVoListMap" type="cn.icepear.dandelion.upm.api.domain.vo.SystemToMenuVo">
		<result column="system_id" property="systemId"/>
		<result column="menu_id" property="id"/>
		<result column="parent_id" property="parentId"/>
		<result column="icon" property="icon"/>
		<result column="menu_name" property="menuName"/>
		<result column="path" property="path"/>
		<result column="component" property="component"/>
		<result column="keep_alive" property="keepAlive"/>
		<result column="menu_type" property="menuType"/>
		<result column="sort_order" property="sortOrder"/>
		<result column="permission" property="permission"/>
		<result column="del_flag" property="delFlag"/>
	</resultMap>



	<!--通过角色查询菜单信息-->
	<select id="listMenusByRoleId" resultMap="MenuVoResultMap">
		SELECT
		sys_menu.*
		FROM
		sys_menu
		LEFT JOIN sys_role_menu ON sys_menu.menu_id = sys_role_menu.menu_id
		WHERE
		sys_menu.del_flag = 0
		AND sys_role_menu.role_id = #{roleId}
		ORDER BY
		sys_menu.sort_order DESC
	</select>

	<!--通过角色ID 查询权限-->
	<select id="listPermissionsByRoleIds" resultType="java.lang.String">
		SELECT
		m.permission
		FROM
		sys_menu m, sys_role_menu rm WHERE m.menu_id = rm.menu_id AND m.del_flag = 0 AND rm.role_id IN (#{roleIds})
	</select>

	<select id="getMenuByMenuId" resultMap="BaseResultMap" >
		SELECT  * from sys_menu m where m.menu_id = #{menuId}
	</select>

	<select id="selectByName" resultMap="BaseResultMap" >
		SELECT  * from sys_menu m where m.menu_name = #{menuName} and m.path = #{path}
	</select>


	<select id="getMenuTreeList" resultMap="SystemToMenuVoListMap">
		SELECT DISTINCT
		menu.menu_id,
		menu.parent_id,
		menu.icon,
		menu.menu_name,
		menu.path,
		menu.component,
		menu.keep_alive,
		menu.menu_type,
		menu.sort_order,
		menu.permission,
		menu.del_flag,
		dict.id AS system_id,
		dict.label AS sysLabel
		FROM
		sys_role_menu role
		LEFT JOIN sys_menu menu ON role.menu_id = menu.menu_id
		LEFT JOIN sys_dict dict ON menu.system_id = dict.id
		<where>
			role.role_id IN(
			<foreach collection="roles" item="item" index="index" separator=",">
				#{item.roleId}
			</foreach>)
			<if test="systemId !=null and systemId !=''">
				and menu.system_id = #{systemId}
			</if>
		</where>
	</select>
	<select id="getAdminMenuTreeList"  resultMap="SystemToMenuVoListMap">
		SELECT
		menu.menu_id,
		menu.parent_id,
		menu.icon,
		menu.menu_name,
		menu.path,
		menu.component,
		menu.keep_alive,
		menu.menu_type,
		menu.sort_order,
		menu.permission,
		menu.del_flag,
		dict.id AS system_id,
		dict.label AS sysLabel
		FROM sys_menu menu
		LEFT JOIN sys_dict dict ON menu.system_id = dict.id
		<where>
			<if test="systemId !=null and systemId !=''">
				and menu.system_id = #{systemId}
			</if>
		</where>
	</select>

	<select id="sonMenuList" resultMap="BaseResultMap">
		SELECT T2.* from (
		SELECT #{menuId} as menu_id FROM DUAL UNION ALL
		select menu_id from (
		select t1.menu_id,
		if(find_in_set(parent_id, @pids) > 0, @pids := concat(@pids, ',', menu_id), 0) as ischild
		from (
		select menu_id,parent_id from sys_menu t where t.del_flag = 0 order by parent_id, del_flag
		) t1,
		(select @pids := #{menuId} id) t2
		) t3 where ischild != 0
		) T1 JOIN sys_menu T2 ON T1.menu_id = T2.menu_id
		WHERE T2.del_flag = 0
		ORDER BY T2.menu_id ASC
	</select>
</mapper>
